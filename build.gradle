buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.4"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.7.RELEASE"
        classpath "de.sebastianboegl.gradle.plugins:shadow-log4j-transformer:2.1.1"
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.15"
    }
}

version "0.1"
group "example.micronaut"

apply plugin:"io.spring.dependency-management"
apply plugin:"com.github.johnrengelman.shadow"
apply plugin:"application"
apply plugin:"de.sebastianboegl.shadow.transformer.log4j"
apply plugin:"java"
apply plugin:"net.ltgt.apt-eclipse"
apply plugin:"net.ltgt.apt-idea"


repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

dependencyManagement {
    imports {
        mavenBom "io.micronaut:micronaut-bom:${micronautVersion}"
    }
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java:${micronautVersion}"
    compile "io.micronaut:micronaut-core:${micronautVersion}"
    compile "io.micronaut:micronaut-http-server-netty:${micronautVersion}"
    compile "io.micronaut:micronaut-inject:${micronautVersion}"
    compile "io.micronaut:micronaut-runtime:${micronautVersion}"
    compileOnly "io.micronaut:micronaut-inject-java:${micronautVersion}"
    compile("io.micronaut.aws:micronaut-function-aws-api-proxy:${micronautVersion}") {
        // Afterburner causes exceptions in GraalVM see https://gist.github.com/huksley/31e7f251f9c3f7d3a9d8aeec2ec9d284
        exclude group: "com.fasterxml.jackson.module", module: "jackson-module-afterburner"
    }
    compile("io.micronaut.aws:micronaut-function-aws-custom-runtime:${micronautVersion}") {
        exclude group: "com.fasterxml.jackson.module", module: "jackson-module-afterburner"
    }
    runtimeOnly "io.micronaut:micronaut-graal"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    testCompile "io.micronaut:micronaut-inject-java"
    testCompile "junit:junit:4.12"
    testCompile "org.hamcrest:hamcrest-all:1.3"

    //tag::testdependencies[]
    testRuntime "io.micronaut:micronaut-http-server-netty"
    //end::testdependencies[]

    //tag::http-client[]
    compile "io.micronaut:micronaut-http-client"
    //end::http-client[]

    //tag::graaldependencies[]
    compileOnly "com.oracle.substratevm:svm"
    runtimeOnly "io.micronaut:micronaut-graal"
    //end::graaldependencies[]
}

shadowJar {
    mergeServiceFiles()
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')
mainClassName = "example.micronaut.Application"
applicationDefaultJvmArgs = [""]

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

compileJava.options.compilerArgs += '-parameters'
compileTestJava.options.compilerArgs += '-parameters'


task depsize  {
    doLast {
        final formatStr = "%,10.2f"
        final conf = configurations.default
        final size = conf.collect { it.length() / (1024 * 1024) }.sum()
        final out = new StringBuffer()
        out << 'Total dependencies size:'.padRight(45)
        out << "${String.format(formatStr, size)} Mb\n\n"
        conf.sort { -it.length() }
            .each {
                out << "${it.name}".padRight(45)
                out << "${String.format(formatStr, (it.length() / 1024))} kb\n"
            }
        println(out)
    }
}
